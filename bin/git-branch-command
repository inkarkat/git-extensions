#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Execute GIT-COMMAND with the name of a passed -b|--branch BRANCH branch (or kept
as HEAD)
- appended
- replacing BRANCH argument(s) anywhere
- replacing BRANCH in the following GIT-COMMAND and -(N-1) arguments
- replacing BRANCH in the following +(N) arguments and appending those
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '([-b|--branch <branch>] [--real-branch-name])|(--mandatory-branch -b|--branch <branch>) [--] ... [-?|-h|--help]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... GIT-COMMAND [...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... --keep-position GIT-COMMAND [... BRANCH ...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... [-2 GIT-COMMAND ARG1|-3 GIT-COMMAND ARG1 ARG2|...] [...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... [+1 ARG1|+2 ARG1 ARG2|+3 ARG1 ARG2 ARG3|...] GIT-COMMAND [...]'
}

isMandatoryBranch=
branch=
typeset -a args=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--mandatory-branch)
			shift; isMandatoryBranch=t;;
	--branch|-b)	if [ "$2" = BRANCH -o -n "$branch" ]; then
			    args+=("$1" "$2"); shift; shift
			else
			    shift; branch="$1"; shift
			fi
			;;
	--real-branch-name)
			shift; branch="$(git-brname --raw)" || exit $?;;
	--)		break;;
	*)		args+=("$1"); shift;;
    esac
done
set -- "${args[@]}" "$@"
if [ -z "$branch" ]; then
    if [ "$isMandatoryBranch" ]; then
	echo >&2 'ERROR: No -b|--branch BRANCH passed.'
	exit 2
    fi
    branch='HEAD'
fi

if [ $# -eq 0 ]; then
    echo >&2 'ERROR: No GIT-COMMAND passed.'
    exit 2
fi

isCountedAppend=
case "$1" in
    +[1-9])
	isCountedAppend=t;&
    -[1-9])
	typeset countedArgNum=${1#[+-]}
	typeset -a countedArgs=("${@:2:${countedArgNum}}")
	set -- "${@:$((2 + countedArgNum))}"

	countedArgs=("${countedArgs[@]//BRANCH/${branch}}")

	[ "$isCountedAppend" ] \
	    && exec git-wrapper "$@" "${countedArgs[@]}" \
	    || exec git-wrapper "${countedArgs[@]}" "$@"
	;;
    --keep-position)
	shift
	exec git-wrapper "${@//BRANCH/${branch}}"
	;;
    *)
	exec git-wrapper "$@" "$branch"
	;;
esac
