#!/bin/bash

: ${GIT_BRLIFETIMESBYEACH_GRAPH_NOGUI:=dumb size ${COLUMNS:-80} $((${LINES:-25} - 3)) ansi}
: ${GIT_BRLIFETIMESBYEACH_GRAPH_GUI:=qt size 1000,1000}

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly etcDir="${projectDir}/etc/brlifetimesbyeach"

printUsage()
{
    git-brlifetimes --help 2>&1 | sed \
	-e '1s#^.*$#Show one-line lifetime, number of commits, commit range, author, date, tags and\ncommit summary of merged branches for each user that authored merges separately.#' \
	-e '2b removeFirstParagraphLoop' \
	-e '/^ *--raw/i\
    --graph		Graph the durations and commit counts per author.' \
	-e '/^Usage:$/N' -e '/\(^\|\n\)Usage: */{ s/\(^\|\n\)\(Usage: *\)\?\([^ |]\+ \)*git-brlifetimes /\1\2'"$(basename "$1")"' /; s/\[--raw\]/[--graph|--raw]/; }' \
	-e b -e :removeFirstParagraphLoop -e '{ /\(^\|\n\)$/{ s/^\(.*\n\)\?//; b; }; N; b removeFirstParagraphLoop; }'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

isSummary=
isRaw=
typeset -a grapher=()
typeset -a logArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--summary|-s|--commits-summary|--duration-summary)
			logArgs+=("$1"); shift; isSummary=t;;
	--graph)	shift; logArgs+=(--raw); isRaw=t; grapher=(gnuplotWrapper);;
	--raw)		logArgs+=("$1"); shift; isRaw=t;;
	--)		logArgs+=("$1"); shift; break;;
	*)		logArgs+=("$1"); shift;;
    esac
done
typeset segregatedusercommandHeaderArgs=(--with-header)
if [ "$isSummary" ]; then
    segregatedusercommandHeaderArgs=(--prefixed)
    [ "$isRaw" ] || segregatedusercommandHeaderArgs+=(--tabular)
fi

typeset -a brlifetimesCommand=(brlifetimes)
if [ -n "$GIT_BRLIFETIMESBYEACH_AGGREGATE_COMMAND" ]; then
    eval "typeset -a brlifetimesCommand=($GIT_BRLIFETIMESBYEACH_AGGREGATE_COMMAND)"
    set -- "$@" --  # Need a trailing -- to prevent that arguments from the aggregate command are parsed off as FILE(s) if it contains a -- itself. Passing <path>s for a multi-repo iteration likely doesn't make sense, anyway.
fi

gnuplotWrapper()
{
    [ -n "$DISPLAY" ] \
	&& local terminalSettings="$GIT_BRLIFETIMESBYEACH_GRAPH_GUI" \
	|| local terminalSettings="$GIT_BRLIFETIMESBYEACH_GRAPH_NOGUI"
    {
	printf '$data << EOD\n'
	cat
	printf 'EOD\ndata = "$data"\nset terminal %s\n\n' "$terminalSettings"
	cat "${etcDir}/graph.gnuplot"
    } | gnuplot --persist
}

brlifetimesbyeach()
{
    GIT_BRLIFETIMESBYEACH_EXIT_STATUS_NO_MERGES=0 \
    GIT_SEGREGATEDUSERCOMMAND_PREFIX_SEPARATOR=$'\t' \
    STATISTICS_SEP=$'\t' \
	git-segregated-user-command "${segregatedusercommandHeaderArgs[@]}" --log-args-for-range --keep-position \
	    "${brlifetimesCommand[@]}" USERFILTER "${logArgs[@]}" "$@"
}

eval 'brlifetimesbyeach "$@"' \
    "${grapher:+|}" '"${grapher[@]}"'
