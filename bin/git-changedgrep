#!/bin/bash
set -o pipefail
shopt -qs extglob

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--more] [--source-count=<number>] [<log-options>] [<since>..<until>] [[--] <path>...] text|/regexp/ [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Combination of logg and logchanged / logtouched: Log where log messages match
text or /regexp/ or where the text or /regexp/ was added or removed (i.e. those
filepairs whose preimage and postimage have different number of occurrences of
the text).
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    cat <<HELPTEXT
    --more	    Also log where lines were modified where text or /regexp/
		    just appears (without necessarily modifying text or /regexp/
		    itself).
    --source-count <number>
		    Limit the number of commits whose log message and diff are
		    searched (for speed). The --max-count parameter just limits
		    the number of found commits.
HELPTEXT
}

typeset -a searchLimitArgs=()
typeset -a logrevArgs=()
typeset -a moreArg=()
typeset -a argsWithoutMore=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--more)		moreArg+=("$1"); shift;;

	--source-count)	shift; searchLimitArgs+=(--max-count "$1"); shift;;
	--source-count=*)
			searchLimitArgs+=(--max-count "${1#*=}"); shift;;


	--max-count|-n) logrevArgs+=("$1" "$2"); shift; shift;;
	--max=count=*|-n+([0-9])|-+([0-9])|--reverse)
			logrevArgs+=("$1"); shift;;

	--)		argsWithoutMore+=("$1"); shift; break;;
	*)		argsWithoutMore+=("$1"); shift;;
    esac
done
typeset -a argsWithoutMoreAndSearchString=("${argsWithoutMore[@]}" "$@")
argsWithoutMoreAndSearchString=("${argsWithoutMoreAndSearchString[@]:0:$((${#argsWithoutMoreAndSearchString[@]}-1))}")

{
    git-pickaxe "${moreArg[@]}" --pretty=tformat:%H "${searchLimitArgs[@]}" "${argsWithoutMore[@]}" "$@"
    git-logg --pretty=tformat:%H "${searchLimitArgs[@]}" "${argsWithoutMore[@]}" "$@"
} | git-graphsortrevs "${searchLimitArgs[@]}" "${argsWithoutMoreAndSearchString[@]}" | \
    git-logrevs ${GIT_CHANGEDGREP_LOGARG} "${logrevArgs[@]}" "${argsWithoutMoreAndSearchString[@]}"
# Note: git-logrevs already invokes git-graphsortrevs, but we'd like to be able
# to limit the searched commits already via --source-count, and for that we need
# this separate pass.
