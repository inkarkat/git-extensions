#!/bin/bash
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Check out a (new or existing) branch. Enforces that such is passed.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-f|--force] [--gui|--terminal|--none] -b|-B (<newbranch>|OLD=NEW|^=PREFIX|+=SUFFIX) [...] [(--submodules|--queried-submodules) [--submodules-recursive]] [CHECKOUT-ARGS ...] [-?|-h|--help]'
}

branchOption=
typeset -a branches=()
typeset -a checkoutArgs=()
logArg=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	-[bB])		branchOption="$1"; shift; branches+=("$1"); shift;;
	--submodules|--queried-submodules)
			checkoutArgs+=("$1"); shift;;
	--@(gui|terminal|none))
			logArg="$1"; shift;;
	*)		break;;
    esac
done
if [ -z "$branchOption" ]; then
    echo 'ERROR: No -b|-B <branch> passed.'
    echo
    printUsage "$0"
    exit 2
fi >&2

oldBranch="$(git-brname --real-branch-only)" || exit $?
newBranch="$(replaceWith -- "$oldBranch" "${branches[@]}" 2>/dev/null || printf %s "${branches[0]}")"
[ "$oldBranch" != "$newBranch" ] || exit 4

if [ $# -eq 0 -o -z "$logArg" -o "$logArg" = --none ]; then
    exec git-wrapper checkout "${checkoutArgs[@]}" "${branchOption:?}" "${newBranch:?}" "$@"
else
    exec git-logdelta $logArg -- checkout "${checkoutArgs[@]}" "${branchOption:?}" "${newBranch:?}" "$@"
fi
