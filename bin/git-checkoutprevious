#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Revert changes [for FILE(s)] in the working copy to the commit prior to passed
<commit> / HEAD. Like "git checkout <commit>^ [-- FILE ...]" but doesn't write
to the index / cause the "detached HEAD" status when no FILEs are passed.
This is meant to be for temporary investigation or verifying a test failure
without the committed fix, so no dirty working copy is allowed.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-f|--force] [<commit>] [--] [FILE ...] [-?|-h|--help]'
}
isForce=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
    --force|-f)		shift; isForce=t;;
esac


[ ! "$isForce" ] && git-dirty --print-error "$@" && exit 1

if [ "$GIT_CHECKOUTPREVIOUS_COMMIT" ]; then
    rev="$GIT_CHECKOUTPREVIOUS_COMMIT"
else
    if [ "$1" = '--' ]; then
	shift
    elif rev="$(git-commitid --no-error "$1")"; then
	shift
	[ "$1" = '--' ] && shift
    fi
    [ "$rev" ] || rev=HEAD
fi

git-wrapper checkout "${rev}^" -- "${@:-.}" \
    && git unstage >/dev/null \
    && git status -sb
