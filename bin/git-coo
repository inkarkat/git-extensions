#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Keep "ours", the original one we had (ORIG_HEAD), or the one we're rebasing
onto, in case of merge conflicts.
Supply <paths> or use -a to apply this to all conflicted files in the index.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '-a|--all | [--] <path> [...] [-?|-h|--help]'
}
isAll=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	--all|-a)	shift; isAll=t;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if ! git-ismerging && ! git-isrebasing; then
    echo >&2 'ERROR: Not currently merging or rebasing.'
    exit 1
fi
if [ "$isAll" ]; then
    if [ $# -gt 0 ]; then
	printUsage "$0"
	exit 2
    fi
    readarray -t files < <(git-conflicts)
    if [ ${#files[@]} -eq 0 ]; then
	echo 'ERROR: No conflicts.'
	exit 99
    fi
    set -- "${files[@]}"
elif [ $# -eq 0 ]; then
    printUsage "$0"
    exit 2
fi >&2

git checkout --ours -- "$@" \
    && git add "$@" \
    && git status -sb
