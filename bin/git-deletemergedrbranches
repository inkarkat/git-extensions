#!/bin/bash
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Delete remote branches that are interactively selected from ${remote:-REMOTE}
branches that have already been merged into HEAD / the passed COMMIT(s).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "${remote:-REMOTE} [-i|--ignore-missing] [-y|--yes] [COMMIT ...] [-?|-h|--help]"
}

case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
remote="${1:?}"; shift
typeset -a rdeletebrArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	-+([iy]))	rdeletebrArgs+=("$1"); shift;;
	--@(ignore-missing|yes))
			rdeletebrArgs+=("$1"); shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
typeset -a mergedArgs=()
for commit
do
    mergedArgs+=(--merged="$commit")
done
[ ${#mergedArgs[@]} -gt 0 ] || mergedArgs=(--merged=HEAD)

printf -v quotedDeleteCommand '%q ' rdeletebr "$remote" "${rdeletebrArgs[@]}"
printf -v quotedMergedArgs ' %q' "${mergedArgs[@]}"
export GIT_SELECTED_COMMAND_DEFAULT_FILES="git-rbr ${remote}${quotedMergedArgs} | git-filter-out-persistent-branches --remote $remote"
exec git-selected-command "${quotedDeleteCommand% }"
