#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Show changes between commits as a context diff.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<diff-options>] [<commit> [<commit>]] [--] [<path>...] [-?|-h|--help]'
}

# Highlight diff output if available.
hasColorDiff=
type -t colordiff >/dev/null && [ -t 1 ] && hasColorDiff=t
typeset -a pager=("${PAGER:-less}" --quit-on-intr --RAW-CONTROL-CHARS); [ -t 1 ] || pager=()

isAsDiffTool=
typeset -a allargs=()
while [ $# -gt 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--as-difftool)	shift; isAsDiffTool=t;;
	--no-color|--color=never)
	    shift
	    hasColorDiff=
	    ;;
	--color|--color=always)
	    shift
	    hasColorDiff=t
	    ;;
	*)
	    allargs+=("$1")
	    shift
	    ;;
    esac
done
set -- "${allargs[@]}"

if [ "$isAsDiffTool" ]; then
    if [ $# -eq 0 ]; then
	echo >&2 'ERROR: No FILEs passed.'
	exit 2
    fi

    ${hasColorDiff:+color}diff -c "$@"
    exit 0	# Need to return success to avoid that Git complains that the "external tool died".
else
    colorArg=--color=always; [ "$hasColorDiff" ] || colorArg=--no-color

    readonly scriptName="$(basename -- "${BASH_SOURCE[0]}")"
    eval "git difftool --no-prompt --extcmd=\"$scriptName --as-difftool \$colorArg\" \"\$@\"" \
	"${pager:+|}" '"${pager[@]}"'
fi
