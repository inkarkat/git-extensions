#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Show changed line numbers between commits, commit and working tree, etc.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--only-new|--only-old] [<diff-options>] [<commit> [<commit>]] [--] [<path>...] [-?|-h|--help]'
}

typeset -a pager=("${PAGER:-less}" --quit-on-intr --RAW-CONTROL-CHARS); [ -t 1 ] || pager=()

oldFormat=$'%dn\n'
newFormat="$oldFormat"
isAsDiffTool=
typeset -a allargs=()
typeset -a forwardedArgs=()
while [ $# -gt 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--as-difftool)	shift; isAsDiffTool=t;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	--only-new)	forwardedArgs+=("$1"); shift; oldFormat='';;
	--only-old)	forwardedArgs+=("$1"); shift; newFormat='';;
	*)		allargs+=("$1"); shift;;
    esac
done
set -- "${allargs[@]}"

if [ "$isAsDiffTool" ]; then
    if [ $# -eq 0 ]; then
	echo >&2 'ERROR: No FILEs passed.'
	exit 2
    fi

    diff --unchanged-line-format= --old-line-format="$oldFormat" --new-line-format="$newFormat" "$@"
    exit 0	# Need to return success to avoid that Git complains that the "external tool died".
else
    readonly scriptName="$(basename -- "${BASH_SOURCE[0]}")"
    quotedForwardedArgs=; [ ${#forwardedArgs[@]} -eq 0 ] || printf -v quotedForwardedArgs ' %q' "${forwardedArgs[@]}"
    git difftool --no-prompt --extcmd="$scriptName --as-difftool${quotedForwardedArgs}" "$@" \
	| eval 'sort --numeric-sort --unique' \
	"${pager:+|}" '"${pager[@]}"'
fi
