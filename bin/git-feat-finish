#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Finish feature <name> / the feature that was developed on the current feature
branch.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-F] [-r] [-p] [-k] [-D] [-S] [--no-ff] [<name|nameprefix>] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac

# DWIM: Derive the feature name from the current branch.
if [ $# -eq 0 ] && \
    branchName="$(git brname --real-branch-only 2>/dev/null)" && \
    featureName="${branchName#feature/}"
then
    if [ "$featureName" = "$branchName" ]; then
	printf >&2 'ERROR: Not on a feature branch: %s\n' "$branchName"
	exit 1
    else
	set -- "$featureName"
    fi
fi

# Ensure that the branch is good for merging.
if targetBranch="$(git config --get gitflow.branch.develop)"; then
    git-mergecheck --merge-to "$targetBranch" || exit $?
fi

git flow feature finish "$@" || exit $?

[ ! -t 1 ] \
    || git-commitInfo \
    || exit 0  # Don't fail when there's a problem with the additional information; the commit is all that counts.
