#!/bin/bash

typeset -A remotes=()
while IFS=$'\n' read -r remote
do
    remotes["$remote"]=t
done < <(git remote)

typeset -a fetchedRemotes=()
typeset -a fetchArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	--all)		fetchArgs+=("$1"); shift; fetchedRemotes=("${!remotes[@]}");;
	--)		fetchArgs+=("$1"); shift; break;;
	-*)		fetchArgs+=("$1"); shift;;
	*)		[ "${remotes["$1"]}" ] && fetchedRemotes+=("$1")
			fetchArgs+=("$1"); shift
			;;
    esac
done
# When no remote is specified, by default the origin remote will be used, unless
# thereâ€™s an upstream branch configured for the current branch.
[ ${#fetchedRemotes[@]} -gt 0 ] || fetchedRemotes=("$(git trackedremote)") || fetchedRemotes=(origin)

eval "typeset -a gitConfigArgs=($GIT_CONFIG_ARGS)"
git -c submodule.recurse=false "${gitConfigArgs[@]}" fetch "${fetchArgs[@]}" "$@" || exit $?
git-fetchdate --set "${fetchedRemotes[@]}" || exit 3
