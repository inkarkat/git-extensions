#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Log together with just the modified file followed by the "TEXT" portion(s) of
patch hunk headers of the diff. Condenses identical "TEXT" portions of hunks and
completely omits logs that have no "TEXT" portion.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[LOG-ARGS ...] [<revision range>] [[--] <path>...] [-?|-h|--help]'
}

typeset -a allargs=()
typeset -a colorArg=(--color=always)
typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS)
if [ ! -t 1 ]; then
    colorArg=()
    pager=()
fi
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--color=auto)	shift;;
	--no-color|--color=*)
			colorArg=("$1"); shift;;
	--color)	[ "$2" = auto ] || colorArg=("$1" "$2"); shift; shift;;
	--)		break;;
	*)		allargs+=("$1"); shift;;
    esac
done
set -- "${allargs[@]}" "$@"

lch()
{
    git log --pretty=tformat:%H "$@" \
	| xargs --no-run-if-empty --delimiter '\n' git-showh "${colorArg[@]}"
}

eval 'lch "$@"' "${pager:+|}" '"${pager[@]}"'
