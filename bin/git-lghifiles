#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
git lg, with commits that touch the passed <path>s getting highlighted.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<log-options>] [<revision range>] [--] <path> ... [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

typeset -a gitLogArgs=()
unset files
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--)		gitLogArgs+=("$1"); shift; typeset -a files=("$@"); break;;
	*)		gitLogArgs+=("$1"); shift;;
    esac
done
if [ -z "${files+t}" ]; then
    # No files after -- captured yet; need to investigate parsed and
    # remaining args from behind for files.
    typeset -a files=()
    gitLogArgs+=("$@")
    while [ ${#gitLogArgs[@]} -ne 0 ]
    do
	lastArg="${gitLogArgs[-1]}"
	[ -e "$lastArg" ] || break

	files=("$lastArg" "${files[@]}")
	gitLogArgs=("${gitLogArgs[@]:0:${#gitLogArgs[@]}-1}")
    done
fi
if [ ${#files} -eq 0 ]; then
    echo 'ERROR: No <path> passed.'
    echo
    printUsage "$0"
    exit 2
fi >&2

printf -v quotedFiles ' %q' "${files[@]}"
exec git-lghighlightedcommits "git log {} --$quotedFiles" "${gitLogArgs[@]}"
