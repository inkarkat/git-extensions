#!/bin/bash
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
One-line list of full commit hashes; useful with --grep.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<log-options>] [<revision range>] [[--] <path>...] [-?|-h|--help]'
}

typeset -a logArgs=()
hashFormat='%H'
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;

	--abbrev-commit|--abbrev|--abbrev=*)
			logArgs+=("$1"); shift; hashFormat='%h';;

	# Ignore options that influence commit formatting (we need just the
	# hashes), and diff options.
	-+([cmtpuz]))	shift;;
	--@(abbrev-commit|no-abbrev-commit|oneline|no-notes|show-signature|relative-date|parents|children|left-right|graph|cc|patch|no-patch|raw|patch-with-raw|numstat|shortstat|summary|patch-with-stat|name-only|name-status|no-color))	shift;;
	-[U])	shift; shift;;
	--@(pretty|format|notes|date|unified|stat|dirstat|submodule|color|word-diff|word-diff-regex|color-words)=*)	shift;;
	--@(pretty|format|notes|date|unified|stat|dirstat|submodule|color|word-diff|word-diff-regex|color-words))	shift; shift;;

	--)		shift; break;;
	*)		logArgs+=("$1"); shift;;
    esac
done

exec git log --pretty="tformat:$hashFormat" "${logArgs[@]}" "$@"
