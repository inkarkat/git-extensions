#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
List URLs to ${remote:-REMOTE} of all files under source control with the
current / passed revision. In contrast to lllbrurl (which incorporates future
changes done in the branch), this creates a permalink to the current file's
contents.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "${remote:-REMOTE} [FILE, ...] [-?|-h|--help]"
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac
remote="${1:?}"; shift
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac

if [ "$HUB" ]; then
    prettyFormat='%h'
    view='@'
    fileSeparator='; file '
    url="$(hub-userrepo "$(git-remote-url "$remote")")" || exit $?
else
    prettyFormat='%H'
    view="/blob/"
    fileSeparator='/'
    url="$(git-remote-url "$remote")" || exit $?
fi

if [ "$1" = '--' ]; then
    shift
elif rev="$(git-commitid --no-error -- "$1")"; then
    shift
    [ "$1" = '--' ] && shift
fi
[ "$rev" ] || rev=HEAD

for filespec
do
    # XXX: Git 2.7.4 gives an error when trying to expand an alias in a
    # subdirectory of a worktree;
    # cp. https://bugzilla.redhat.com/show_bug.cgi?id=1377440
    # Expand the "lh" alias into the effective log command.
    #hash="$(git lh --max-count 1 "$rev" -- "$filespec")"
    hash="$(git log --pretty="tformat:$prettyFormat" --max-count 1 "$rev" -- "$filespec")"
    git-lll --prefix "${url%/}${view}${hash}${fileSeparator}" --transform 'urlencode --filespec --newlines -' --no-classify "$filespec"
done
