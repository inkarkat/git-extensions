#!/bin/bash

printUsage()
{
    git-localbrdo --help 2>&1 | sed \
	-e '1s#^.*$#Check out all / the last N local branches (except for the current branch and master (and base branch if defined)) ordered by date of first commit one by one and execute "git SIMPLECOMMAND" and/or COMMANDLINE on each branch.#' \
	-e '2b removeFirstParagraphLoop' \
	-e '/^ *--branches BRANCH \[\.\.\.\] ;/b removeOptionLoop' \
	-e '/^Usage:$/N' -e '/\(^\|\n\)Usage: */{ s/\(^\|\n\)\(Usage: *\)\?\([^ ]\+ \)*git-localbrdo /\1\2'"$(basename "$1")"' /; s/ \[--branches BRANCH \[\.\.\.\] ;\] / /; }' \
	-e '/^Example:$/N' -e '/\(^\|\n\)Example: */{ s/\(^\|\n\)\(Example: *\)\?git-localbrdo /\1\2'"$(basename "$1") /; }" \
	-e b -e :removeFirstParagraphLoop -e '{ /\(^\|\n\)$/{ s/^\(.*\n\)\?//; b; }; N; b removeFirstParagraphLoop; }' \
	-e b -e :removeOptionLoop -e '{ /\n *--branches BRANCH \[\.\.\.\] ;[^\n]*$/{ N; b removeOptionLoop; }; /\n *--[^\n]*$\|\n[^	 ]\|\n$/{ s/^\(.*\n\)\?//; b; }; N; b removeOptionLoop; }'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

GIT_LOCALBRDO_SOURCE_COMMAND='git-localbrc' \
GIT_LOCALBRDO_SOURCE_SORTED=t \
    exec git-localbrdo "$@"
