#!/bin/bash
set -o pipefail

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--[no-]renames] [-M<n>|--find-renames[=<n>]] [-C<n>|--find-copies[=<n>]|--find-copies-harder] ([-a|--added] [-c|--copied] [-d|--deleted] [-m|--modified] [-r|--renamed] [-t|--retyped] ... | [-A|--not-added] [-C|--not-copied] [-D|--not-deleted] [-M|--not-modified] [-R|--not-renamed] [-T|--not-retyped] ...) [<log-options>] [<revision-range>] [[--] <path>...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Show a log of commits that modify files in the specified way.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    cat <<HELPTEXT
    --added|-a --copied|-c --deleted|-d --modified|-m --renamed|-r --retyped|-t
		    Only log commits with added / copied / deleted / modified /
		    renamed / changed in type files (can be combined). If you
		    want renames / copies to be counted as added / deleted, pass
		    --no-renames.
    --not-added|-A --not-copied|-C --not-deleted|-D --not-modified|-M
    --not-renamed|-R --not-retyped|-T
		    Don't log commits with added / copied / deleted / modified /
		    renamed / changed in type files (can be combined). If you
		    want renames / copies to be counted as added / deleted, pass
		    --no-renames.
HELPTEXT
}

statusFilter=
typeset -a logArgs=()
typeset -a renameArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;

	--no-renames|--renames|--find-renames|--find-renames=*|-M?*|--find-copies|--find-copies=*|-C?*|--find-copies-harder)
			renameArgs+=("$1"); shift;;
	--added|-a)	shift; statusFilter+='A';;
	--not-added|-A)	shift; statusFilter+='a';;
	--copied|-c)	shift; statusFilter+='C';;
	--not-copied|-C)
			shift; statusFilter+='c';;
	--deleted|-d)	shift; statusFilter+='D';;
	--not-deleted|-D)
			shift; statusFilter+='d';;
	--modified|-m)	shift; statusFilter+='M';;
	--not-modified|-M)
			shift; statusFilter+='m';;
	--renamed|-r)	shift; statusFilter+='R';;
	--not-renamed|-R)
			shift; statusFilter+='r';;
	--retyped|-t)	shift; statusFilter+='T';;
	--not-retyped|-T)
			shift; statusFilter+='t';;

	--)		break;;
	*)		logArgs+=("$1"); shift;;
    esac
done
if [ -z "$statusFilter" ]; then
    echo 'ERROR: At least one of -a|--added, -c|--copied, -d|--deleted, -m|--modified, -r|--renamed, -t|--retyped, -A|--not-added, -C|--not-copied, -D|--not-deleted, -M|--not-modified, -R|--not-renamed, -T|--not-retyped must be passed.'
    echo
    printUsage "$0"
    exit 2
fi >&2

exec git-wrapper log "${renameArgs[@]}" --diff-filter="$statusFilter" "${logArgs[@]}" "$@"
