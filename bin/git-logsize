#!/bin/bash

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly libDir="${projectDir}/lib"

printUsage()
{
    cat <<HELPTEXT
One-line author, date, tags and commit summary, plus the list and before / after
sizes of changed files.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<log-options>] [<revision range>] [[--] <path>...] [-?|-h|--help]'
}

typeset -a gitLogArgs=()
typeset -a colorArg=(--color=always)
typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS)
if [ ! -t 1 ]; then
    colorArg=()
    pager=()
fi
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--color=auto)	shift;;
	--no-color|--color=*)
			colorArg=("$1"); shift;;
	--color)	[ "$2" = auto ] || colorArg=("$1" "$2"); shift; shift;;
	--)		break;;
	*)		gitLogArgs+=("$1"); shift;;
    esac
done

summarize()
{
    awk '
/^ 1 file changed, / { next }

match($0, / \| Bin (\x1b\[[0-9:;]*m)?([[:digit:]]+)(\x1b\[[0-9:;]*m)? -> (\x1b\[[0-9:;]*m)?([[:digit:]]+)(\x1b\[[0-9:;]*m)? bytes$/, matches) {
    colorPrefixBefore = matches[1]
    totalBefore += matches[2]
    colorSuffixBefore = matches[3]
    colorPrefixAfter = matches[4]
    totalAfter += matches[5]
    colorSuffixAfter = matches[6]
    sub(/ \| Bin /, " | ")
}

match($0, /^ [[:digit:]]+ files changed, /) {
    totalDifference = (totalBefore != "" && totalAfter != "" \
	? " | " colorPrefixBefore totalBefore colorSuffixBefore " -> " colorPrefixAfter totalAfter colorSuffixAfter " bytes" \
	: "" \
    )
    print substr($0, 1, RLENGTH - 2) totalDifference
    totalBefore = totalAfter = ""
    next
}

{ print }
'
}

git -c core.attributesFile=<(echo "* -diff") onelinelog --stat "${colorArg[@]}" "${gitLogArgs[@]}" "$@" \
    | eval 'summarize' \
    "${pager:+|}" '"${pager[@]}"'
