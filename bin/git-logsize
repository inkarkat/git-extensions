#!/bin/bash

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly libDir="${projectDir}/lib"

printUsage()
{
    cat <<HELPTEXT
One-line author, date, tags and commit summary, plus the list and before / after
sizes of changed files.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--summary] [<log-options>] [<revision range>] [[--] <path>...] [-?|-h|--help]'
}

typeset -a gitLogArgs=()
typeset -a colorArg=(--color=always)
typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS)
if [ ! -t 1 ]; then
    colorArg=()
    pager=()
fi
isSummary=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--color=auto)	shift;;
	--no-color|--color=*)
			colorArg=("$1"); shift;;
	--color)	[ "$2" = auto ] || colorArg=("$1" "$2"); shift; shift;;
	--summary)	shift; isSummary=t;;
	--)		break;;
	*)		gitLogArgs+=("$1"); shift;;
    esac
done

summarize()
{
    awk \
	-v "isSummary=$isSummary" \
'
BEGIN {
    beforeAfterColumnWidth = 50
}
function calculateDelta(before, after, colorPrefixAfter, colorPrefixBefore, colorSuffixAfter, colorSuffixBefore,      delta, percent, colorPrefix, colorSuffix)
{
    delta = after - before
    percent = (before > 0 ? int(100 * delta / before) : 0)
    if (delta > 0 ) {
	colorPrefix = colorPrefixAfter "+"
	colorSuffix = colorSuffixAfter
    } else if (delta < 0) {
	colorPrefix = colorPrefixBefore
	colorSuffix = colorSuffixBefore
    } else {
	colorPrefix = ""
	colorSuffix = ""
    }
    return colorPrefix delta colorSuffix " bytes" (percent == 0 ? "" : ", " colorPrefix percent "%" colorSuffix)
}

match($0, /^(.* )\| Bin (\x1b\[[0-9:;]*m)?([[:digit:]]+)(\x1b\[[0-9:;]*m)? -> (\x1b\[[0-9:;]*m)?([[:digit:]]+)(\x1b\[[0-9:;]*m)? bytes$/, matches) {
    fileFieldLen = length(matches[1])
    colorPrefixBefore = matches[2]
    totalBefore += matches[3]
    colorSuffixBefore = matches[4]
    colorPrefixAfter = matches[5]
    totalAfter += matches[6]
    colorSuffixAfter = matches[7]
    sub(/ \| Bin /, " | ")
    beforeAfterColumnLen = length(matches[3] " -> " matches[6] " bytes")

    fileStat = $0 sprintf("%-" (beforeAfterColumnWidth - beforeAfterColumnLen) "s | %s", "", calculateDelta(matches[3], matches[6], colorPrefixAfter, colorPrefixBefore, colorSuffixAfter, colorSuffixBefore))
    if (! isSummary) {
	print fileStat
    }
    next
}

/^ 1 file changed, / {
    print fileStat
    totalBefore = totalAfter = ""
    next
}
match($0, /^ [[:digit:]]+ files changed, /) {
    filesChangedPart = substr($0, 1, RLENGTH - 2)
    if (totalBefore != "" && totalAfter != "") {
	totalDifference = colorPrefixBefore totalBefore colorSuffixBefore " -> " colorPrefixAfter totalAfter colorSuffixAfter " bytes"
	beforeAfterColumnLen = length(totalBefore " -> " totalAfter " bytes")
	printf("%-" (isSummary ? 22 : fileFieldLen) "s| %s%-" (beforeAfterColumnWidth - beforeAfterColumnLen) "s | %s\n", filesChangedPart, totalDifference, "", calculateDelta(totalBefore, totalAfter, colorPrefixAfter, colorPrefixBefore, colorSuffixAfter, colorSuffixBefore))
    } else {
	print(filesChangedPart)
    }

    totalBefore = totalAfter = ""
    next
}

{ print }
'
}

readonly BINARY_GITATTRIBUTES_OVERRIDE='* -diff'    # Switch to binary difference, which just shows the difference in net file sizes.

# Use $GIT_DIR/info/attributes file if possible because it has the highest precedence.
gitDir="$(git rev-parse --git-dir 2>/dev/null)" || exit 3
gitAttributesFilespec="${gitDir}/info/attributes"
typeset -a gitConfigArgs=()
[ ! -e "$gitAttributesFilespec" ] \
    && printf '%s\n' "$BINARY_GITATTRIBUTES_OVERRIDE" > "$gitAttributesFilespec" \
    && trap 'rm -f -- "$gitAttributesFilespec" 2>/dev/null' EXIT \
    || gitConfigArgs=(-c core.attributesFile=<(printf '%s\n' "$BINARY_GITATTRIBUTES_OVERRIDE"))
    # Fall back to a user-scoped override.

git "${gitConfigArgs[@]}" onelinelog --stat "${colorArg[@]}" "${gitLogArgs[@]}" "$@" \
    | eval 'summarize' \
    "${pager:+|}" '"${pager[@]}"'
