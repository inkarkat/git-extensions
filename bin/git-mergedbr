#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
List [remote] branches that have already been merged into HEAD / the passed
COMMIT(s).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-r|--remote REMOTE] [COMMIT ...] [-?|-h|--help]'
}

remote=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	--remote|-r)	shift; remote="${1:?}"; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
typeset -a mergedArgs=()
for commit
do
    mergedArgs+=(--merged="$commit")
done
[ ${#mergedArgs[@]} -gt 0 ] || mergedArgs=(--merged=HEAD)

git-${remote:+r}br "${remote:---list}" "${mergedArgs[@]}" \
    | sed -e '/^(HEAD detached \(at\|from\) .*)$/d' -e '/^(no branch)$/d' \
    | git-filter-out-persistent-branches ${remote:+--remote "$remote"}
