#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Execute GIT-COMMAND with the branch name where the current branch / N previous
branch got branched off / with --last-checkout: the [N'th] last checked-out
branch / with --previous: where the tip of the branch was [N'th] last
- appended
- replacing BRANCH argument(s) anywhere
- replacing BRANCH in the following GIT-COMMAND and -(N-1) arguments
- replacing BRANCH in the following +(N) arguments and appending those
If there's no branch, an error is printed.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--last-checkout|--previous|(-a|--any|-r|--include-remote-refs|-t|--include-tags [...])] [-n|--branch-number N] [--drop-remote] [--] ... [-?|-h|--help]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... GIT-COMMAND [...] [-?|-h|--help]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... --keep-position GIT-COMMAND [... BRANCH ...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... [-2 GIT-COMMAND ARG1|-3 GIT-COMMAND ARG1 ARG2|...] [...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '... [+1 ARG1|+2 ARG1 ARG2|+3 ARG1 ARG2 ARG3|...] GIT-COMMAND [...]'
}

typeset -a gitRevRangeThisBranchArgs=()
isLast=
lastSigil=
lastCount=1
isDropRemote=
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)		shift; printUsage "$0"; exit 0;;
	--last-checkout)	shift; isLast=t; lastSigil=-;;
	--previous)		shift; isLast=t; lastSigil=;;
	--any|-a|--include-remote-refs|-r|--include-tags|-t)
				gitRevRangeThisBranchArgs+=("$1"); shift;;
	--branch-number|-n)	gitRevRangeThisBranchArgs+=("$1" "$2"); shift; lastCount="$1"; shift;;
	--drop-remote)		shift; isDropRemote=t;;
	--)			shift; break;;
	*)			break;;
    esac
done

branchBranch="$(
    if [ "$isLast" ]; then
	git-rev-range --revision "@{${lastSigil}${lastCount}}" --no-range name-rev --name-only
    else
	git-rev-range-this-branch --no-range "${gitRevRangeThisBranchArgs[@]}"
    fi 2>/dev/null | \
	sed -e 's#^remotes/##'
)"
if ! git-existsbr -- "$branchBranch"; then
    echo >&2 'No branch found.'
    exit 1
fi
if [ "$isDropRemote" ]; then
    for remote in $(git remote)
    do
	if [[ "$branchBranch" =~ ^"${remote}/"(.*)$ ]]; then
	    branchBranch="${BASH_REMATCH[1]}"
	    break
	fi
    done
fi

isCountedAppend=
case "$1" in
    +[1-9])
	isCountedAppend=t;&
    -[1-9])
	typeset countedArgNum=${1#[+-]}
	typeset -a countedArgs=("${@:2:${countedArgNum}}")
	set -- "${@:$((2 + countedArgNum))}"

	countedArgs=("${countedArgs[@]//BRANCH/${branchBranch}}")

	[ "$isCountedAppend" ] \
	    && exec git-wrapper "$@" "${countedArgs[@]}" \
	    || exec git-wrapper "${countedArgs[@]}" "$@"
	;;
    --keep-position)
	shift
	exec git-wrapper "${@//BRANCH/${branchBranch}}"
	;;
    *)
	exec git-wrapper "$@" "$branchBranch"
	;;
esac
