#!/bin/bash
set -o pipefail
shopt -qs extglob

printUsage()
{
    cat <<HELPTEXT
Checkout local branch from the ${remote:-REMOTE} branch [matching pattern] that
was created last (except the current branch and master (and base branch if
defined)).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "${remote:-REMOTE} [--gui|--terminal|--none] [<branch-glob>] [-?|-h|--help]"
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
if [ $# -eq 0 ]; then
    echo >&2 'ERROR: Must pass REMOTE.'
    exit 2
fi
remote="${1:?}"; shift

logArg=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --@(gui|terminal|none))
			logArg="$1"; shift;;
esac
if [ $# -eq 0 -o $# -gt 2 ]; then
    echo >&2 "ERROR: Must pass REMOTE and optionally <branch-glob>."
    exit 2
fi
remote=$1
branchPattern=$2

currentBranch="$(git-remotebr "$remote" 2>/dev/null || echo "(remote branch not found)")"
masterBranch="$(git-mbr)"
baseBranch="$(git-nbr 2>/dev/null)"
remoteBranch="$(git-brc --bare -r "${remote}/${branchPattern}" | grep -v -F --line-regexp -e "${remote}/${masterBranch}" ${baseBranch:+-e "${remote}/$baseBranch"} -e "$currentBranch" | tail -n 1)" || exit $?
if [ -z "$remoteBranch" ]; then
    # git branch does not return an error if there are no matches for the passed pattern.
    printf >&2 'ERROR: No branch matching %s/%s (excluding the current %s and %s%s) found.\n' "$remote" "$branchPattern" "$currentBranch" "$masterBranch" "${baseBranch:+ and ${baseBranch}}"
    exit 1
fi
exec git-checkout-remote-branch "$logArg" "$remoteBranch"
