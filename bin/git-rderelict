#!/bin/bash

: ${GIT_DERELICT_AGE=1y}
: ${GIT_DERELICT_REMOTE_NAME:=derelict}

printUsage()
{
    cat <<HELPTEXT
Check whether the ${remote:-REMOTE} is older than $GIT_DERELICT_AGE [and [offer to] rename it
to ${GIT_DERELICT_REMOTE_NAME}-{owner} / delete it if it is].
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "${remote:-REMOTE} [--list|--offer|--rename|--delete] [--no-fetch] [-?|-h|--help]"
}

case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
remote="${1:?}"; shift

isFetch=t
preAction=:
action=:
notDerelictStatus=1
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	--list)		shift; preAction=list;;
	--offer)	shift; preAction=offerRename; action=rename; notDerelictStatus=0;;
	--rename)	shift; action=rename;;
	--delete)	shift; action=delete;;
	--no-fetch)	shift; isFetch=;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    printUsage "$0" >&2
    exit 2
fi

[ -n "$GIT_DERELICT_AGE" ] || exit 99

getDerelictRepoName()
{
    local remoteRepository="$(hub-userrepo "$(git-remote-url "$remote")")"
    local owner="${remoteRepository%%/*}"
    printf %s "${GIT_DERELICT_REMOTE_NAME}${owner:+-}${owner}"
}

list()
{
    git commitage --with-revision "${remoteBranches[@]}" | reldate --epoch-lines
}

offerRename()
{
    list
    local choice; choice="$(userchoiceFromList \
	--keep-prompt --introduction "The last commit of all of ${remote}'s branches is older than $GIT_DERELICT_AGE." --no-cancel --ignore-case \
	-- "[R]ename ${remote} to ${derelictRepoName}" "[D]elete ${remote}" '[K]eep'
    )" || exit $?
    action="${choice,,}"
    action="${action%% *}"
}

rename()
{
    git remote rename "${remote:?}" "${derelictRepoName:?}"
}

delete()
{
    git remote remove "${remote:?}"
}

keep()
{
    :
}

if ! git-existsremote "$remote"; then
    printf >&2 'ERROR: No such remote: %s\n' "$remote"
    exit 2
fi

if [ "$isFetch" ] && git-fetchdate --remote "$remote" -gt "$GIT_DERELICT_AGE"; then
    printf >&2 'Fetching %s first...\n' "$remote"
    # XXX: Don't use "git-wrapper fetch" there, because that would use my hub-fetch
    # extension if we got invoked via hub.
    git-fetch "$remote"
fi

readarray -t remoteBranches < <(git rbrrefdo-wrapper "$remote")
if git-commitage --older "$GIT_DERELICT_AGE" "${remoteBranches[@]}"; then
    derelictRepoName="$(getDerelictRepoName)" \
	&& $preAction \
	&& $action
else
    exit $notDerelictStatus
fi
