#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Reset my current branch to the HEAD of the tracked branch. Use this when the
local branch has been pointed elsewhere (e.g. due to an attempted rebase), and
you want to restore the original state. The working copy is left intact.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<reset-args> ...] [--] [<paths>...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac

remoteBranch="$(git-tracks --raw)" || exit $?

if [ "$1" = '--must-be-origin' ]; then
    shift
    if [ "${remoteBranch%%/*}" != 'origin' ]; then
	echo "This branch does not track a branch in origin: ${remoteBranch}"
	exit 1
    fi
fi

exec git reset "$@" "${remoteBranch:?}"
