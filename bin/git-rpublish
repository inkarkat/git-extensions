#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Initial publish of current / passed <branch> to ${remote:-REMOTE}.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "${remote:-REMOTE} [-f|--force] [-y|--yes] [--] [<branch> ...] [-?|-h|--help]"
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac

remote="${1:?}"; shift
typeset -a gitRemoteMutateArgs=()
typeset -a forceArg=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	--force|-f)	forceArg+=("$1"); shift;;
	--yes|-y)	gitRemoteMutateArgs+=("$1"); shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

if [ $# -eq 0 ]; then
    # Specify the current branch name so that a publish overrides an existing
    # push configuration.
    branch="$(git-brname --real-branch-only)" || exit $?
    set -- "HEAD:refs/heads/${branch}"
fi

git-rev-range-outgoing "$remote" -4 commitcheck --severity-prefix 'Note' RANGE

exec git-remote-mutate "$remote" --message 'Publish' --arguments "$@" \; "${gitRemoteMutateArgs[@]}" \
    push "${forceArg[@]}" --set-upstream "$remote" "$@"
