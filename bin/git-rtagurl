#!/bin/bash
set -o pipefail

: ${GIT_TAGURL_VIEW=tree}

printUsage()
{
    cat <<HELPTEXT
Print the URL of the current tag in REMOTE. / Turn tag names printed by
TAGLIST-COMMAND into URLs.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" "${remote:-REMOTE} [--compare BRANCH] [TAGLIST-COMMAND [...]] [-?|-h|--help]"
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac

if [ $# -eq 0 ]; then
    echo >&2 'ERROR: Must pass REMOTE.'
    exit 2
fi
remote="$1"; shift

view=
hasColor=; [ -t 1 ] && hasColor=t
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=never)
			hasColor=; shift;;
	--color=always)	hasColor=t; shift;;
	--color=auto)	shift;;
	--color)	case "$2" in
			    always) hasColor=t;;
			    never)  hasColor=;;
			    auto)   ;;
			    *)	    echo >&2 "ERROR: Invalid --color arg: $2"
				    echo >&2
				    printUsage "$0" >&2
				    exit 2
				    ;;
			esac
			shift; shift
			;;
	--compare)	shift
			if [ "$HUB" ]; then
			    view="; differences to ${1:?} from tag "
			else
			    view="/compare/${1:?}..."
			fi
			shift
			;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -eq 0 ]; then
    if tag="$(git-describe-tag --exact-match 2>/dev/null)"; then
	# DWIM: Print the current tag instead of all available ones.
	set -- exec printf '%s\n' "$tag"
    else
	set -- rtagtype "$remote" all
    fi
fi

: ${GIT_TAGURL_URL_PREFIX=}
: ${GIT_TAGURL_URL_SUFFIX=}
: ${GIT_TAGURL_TAG_PREFIX=}
: ${GIT_TAGURL_TAG_SUFFIX=}

if [ ! "$hasColor" ]; then
    GIT_TAGURL_URL_PREFIX=
    GIT_TAGURL_URL_SUFFIX=
    GIT_TAGURL_TAG_PREFIX=
    GIT_TAGURL_TAG_SUFFIX=
fi

if [ -n "$view" ]; then
    :
elif [ "$HUB" ]; then
    view='; tag '
else
    view="/${GIT_TAGURL_VIEW}/"
fi

if [ "$HUB" ]; then
    remoteUrl="$(git-remote-url "$remote")" \
	&& url="$(hub-userrepo "$remoteUrl")" \
	|| exit $?
else
    url="$(git-remote-url "$remote")"
fi || exit 3

status=
while IFS=$'\n' read -r tag
do
    urlencodedTag="$(printf %s "$tag" | urlencode --filespec -)" || { status=3; continue; }

    printf '%s%s%s%s%s%s%s\n' "$GIT_TAGURL_URL_PREFIX" "$url" "$GIT_TAGURL_TAG_SUFFIX" "$view" "$GIT_TAGURL_TAG_PREFIX" "$urlencodedTag" "$GIT_TAGURL_TAG_SUFFIX"
    : ${status:=0}
done < <(git-wrapper "$@")
exit ${status:-99}
