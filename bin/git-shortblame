#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
I use git annotate instead of git blame; its output format is tab-delimited,
which makes parsing somewhat easier, and it does not contain file names (when
there are renamings, or forced with --show-name, but cannot be disabled).

Unfortunately, git blame / annotate can only omit both author and timestamp via
-s. I just want to get rid of the timestamp.

And make the author a fixed-width single word, i.e. trim / pad, and replace
spaces with "_", so that it can be matched and operated on in an easier way.
(And more consistent with blame output from other revision control systems (like
Subversion), which don't allow spaces in the author name.)
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[ANNOTATE-ARGS ...] file [revision] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac

annotate()
{
    # -w ignores whitespace
    # -M detects moving lines in the file
    # -C detects moving lines into other files
    # -t uses raw timestamps; which are easiest to parse
    git-wrapper annotate -w -M -C -t "$@" | perl \
	-e 'sub fix { my $arg = shift; $arg =~ s/ /_/g; return sprintf("%-14.14s", $arg); }' \
	-lpe 's/^([^\t]*)\t\(([^\t]+)\t\d+ [+-]\d+\t+\d+\)/$1 . " " . fix($2) . $3 . ") "/e'
}

typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS); [ -t 1 ] || pager=()
eval 'annotate "$@"' "${pager:+|}" '"${pager[@]}"'
