#!/bin/bash
set -o pipefail

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--intermediate] ([--cached] [--to COMMIT])|<since>..<until>|--since <date>|--max-count <number>|-n <number>|COMMIT-LIMITING-ARGS] [[--] <path>...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Show only the submodules that were modified in the passed commit or commit
range.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    cat <<HELPTEXT
    --intermediate  submodules that are again the same, but were changed and
		    then changed back, are included, too
HELPTEXT
}

case "$1" in
    --help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
esac


git-showfiles --diff-merges=first-parent "$@" | \
    git-subfilter
