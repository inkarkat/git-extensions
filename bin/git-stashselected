#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Interactively select (from modified files or passed list of files) files (or
directly pass N, M, ... selections) to stash by number.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[N [M ...]] [--] [FILE ...] [-?|-h|--help]'
}

canUseStashPush=t
versionCompare "$(git --version 2>/dev/null)" -lt 2.13.7 2>/dev/null && canUseStashPush=

addCommand='add'
pushArg=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
    --edit)		addCommand+=" $1"
			shift
			canUseStashPush=    # Even Git 2.35.1 only supports stash push --patch, but no --edit; we still need to emulate it.
			;;
    --patch)		addCommand+=" $1"
			pushArg="$1"
			shift
			;;
esac

export GIT_SELECTED_COMMAND_DEFAULT_FILES='git-unstaged --' # Only offer unstaged files; "git stash push --keep-index" does not touch the index and the legacy implementation needs a clean index, anyway.

if [ "$canUseStashPush" ]; then
    exec git-selected-command --filter '' "stash push${pushArg:+ }${pushArg} --keep-index --" "$@"
else
    if git-staged --quiet; then
	echo 'ERROR: Index must be clean.' >&2
	exit 1
    fi

    git-selected-command --filter '' "$addCommand --" "$@" && git-stashi || git unstage
fi
