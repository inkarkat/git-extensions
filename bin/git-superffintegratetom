#!/bin/bash
# Deprecated: Use git-supersubreintegratetom instead.

printUsage()
{
    cat <<HELPTEXT
Merge / rebase the current branch of a superproject (immediately after
reintegrating its submodules) to the master branch via a reverse integration;
i.e. master is merged / rebased to the current branch first so that the
reintegration is a simple fast-forward.
Performs additional sanity checks and chooses the right arguments based on
whether this is a short-lived feature with a single superproject commit or full
history exists.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[--no-delete] [--no-submodule-checkout] [--no-submodule-update] [-y|--yes] [-?|-h|--help]'
    echo
    printf 'Usage: GIT_REINTEGRATE_CHECK_COMMAND=CMD %q %s\n' "$(basename "$1")" '[...]'
    printf 'Usage: %q %s\n' "$(basename "$1")" '[...] --no-checks | -c|--command "CHECK-COMMANDLINE" [-c ...] | --exec SIMPLECOMMAND [...] ; [...]'
    printf 'Usage: echo CHECK-COMMANDLINES | %q %s\n' "$(basename "$1")" '[...] [--bare|[--initial-status NUM] [--trailing-prompt|--no-trailing-prompt] [--no-output-no-prompt] [--no-output-no-error] [--emulate-prompt]] [--no-success-no-count|--no-count-on N] [--exit-on-success|--exit-on-failure|--exit-on NUM] [--worst-status] [--comment COMMENT] [--summarize-failed ERROR-TEXT [--summarize-failed-separator SEP]] -'
    printf 'Usage: %q %s - <<EOF\n  CHECK-COMMANDLINE\n...\nEOF\n' "$(basename "$1")" '[...]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

readarray -t affectedSubmodules < <(git bomsubmodules)

isSingleBranchCommit=
updateVerb='updates have'
if git bomcount -eq 1; then
    isSingleBranchCommit=t
    updateVerb='update has'
fi

if [ ${#affectedSubmodules[@]} -gt 0 ] \
    && git-dirty --print-error --error-message "ERROR: Submodule $updateVerb not been incorporated into the superproject yet; the working copy is dirty." -- "${affectedSubmodules[@]}"
then
    exit 1
fi

masterBranch="$(git-mbr)" || exit 3
if [ ${#affectedSubmodules[@]} -gt 0 ] \
    && ! acceptStatus 99 git-subdo --no-pager --for "${affectedSubmodules[@]}" \; \
	--predicate-command "[ \"\$(git brname --real-branch-only)\" != $masterBranch ]" \
	--command "printf 'Not on %s: ' '$masterBranch'; 'git brname; false"
then
    exit 1
fi

if [ "$isSingleBranchCommit" ]; then
    echo "Rebasing the single superproject commit on top of ${masterBranch}."
    typeset -a ffintegratetoArgs=(--push-branch --rebase-single)
else
    # Disallow fast-forward to have a merge commit that maintains the history of
    # how the feature grew.
    echo "Maintaing the history of how the feature grew via a merge to ${masterBranch}."
    typeset -a ffintegratetoArgs=(--push-branch --no-ff)
fi

exec git-ffintegrateto --branch "$masterBranch" "${ffintegratetoArgs[@]}" "$@"
