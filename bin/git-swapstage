#!/bin/bash
# Source: https://stackoverflow.com/a/20458127/813602

printUsage()
{
    cat <<HELPTEXT
Swap staged and unstaged (just updated; pass -A|--all to also include untracked
files) changes.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-A|--all] [-?|-h|--help]'
}

uncommit()
{
    git reset --mixed HEAD~1 || exit $?
    git reset --soft  HEAD~1 || exit $?
}

continueCommand="$(basename "$0")"
addArg=--update
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--no-color|--color=*)
			shift;;
	--color)	shift; shift;;
	--continue-command)
			shift; continueCommand="${1:?}"; shift;;
	--continue-[12])
			git-swaplast --continue-command "$(basename "$0")" "$@" \
			    && uncommit
			exit $?
			;;
	--abort)	git-swaplast --abort \
			    && uncommit
			exit $?
			;;
	--all)		addArg="$1"; shift;;
	--)		shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done
if [ $# -ne 0 ]; then
    printUsage "$0" >&2
    exit 2
elif git-existsbr _invert; then
    echo >&2 'ERROR: It looks like a git-swaplast is under way. Please finalize that first (via --continue|--quit|--abort|--cleanup).'
    exit 1
fi

git commit -m futureUnstaged || exit $?
git add $addArg || exit $?
git commit -m futureStage || exit $?
git-swaplast --continue-command "$continueCommand" || exit $?
uncommit
