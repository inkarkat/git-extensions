#!/bin/bash
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
List only those tags of the passed (annotated or lightweight) type.
HELPTEXT
    printf 'Usage: %q %s\n' "$(basename "$1")" 'all|annotated|lightweight [[-l|--list] <pattern>] [-?|-h|--help]'
}

tagType=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
    all)		;;
    annotated)		tagType=tag;;
    lightweight)	tagType=commit;;
    *)			printf >&2 'ERROR: Invalid tag type %s; must be either annotated or lightweight.\n' "$1"; exit 2;;
esac; shift

pattern=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
    --list|-l)		shift; pattern="$1"; shift;;
esac
case $# in
    0)	;;
    1)	pattern="$1"; shift;;
    *)	printUsage "$0" >&2; exit 2;;
esac

patternMatcher()
{
    while IFS=$'\n' read -r line
    do
	case "$line" in
	    $pattern) printf '%s\n' "$line";;
	esac
    done
}

tagList()
{
    git for-each-ref --format "${tagType:+%(objecttype)$'\t'}%(refname:strip=2)" --sort=version:refname refs/tags
}

tagTypeFilter()
{
    awk --field-separator $'\t' -v tagType="$tagType" '$1 == tagType { print $2; }'
}

typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS); [ -t 1 ] || pager=()
eval tagList \
    "${tagType:+| tagTypeFilter}" \
    "${pattern:+| patternMatcher}" \
    "${pager:+|}" '"${pager[@]}"'
