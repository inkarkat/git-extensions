#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Variant of ufetchup-hushed that fetches all upstream changes and always pulls
the passed branch (using a separate worktree if the branch isn't the current
one, suppressing standard fetch / rebase information and messages when there are
no changes in upstream) and then pushes this branch to my GitHub clone. Useful
when updating many repositories e.g. with git-wcdo.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '<branch> [FETCHUP-ARGS ...] [-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac


branch="${1:?}"; shift
{
    export GIT_UP_REDIRECTION='2>&1'
    if [ "$(git-brname --raw)" = "$branch" ]; then
	git-ufetchup "$@"
    else
	git ufetch || exit $?

	worktreeName="$(git root)" || exit $?
	worktreeName="${worktreeName%.*}.rebasewc"
	GIT_UP_REBASE=t git-autoworktree --name "$worktreeName" --branch "$branch" --leave-detached git-ucatchup "$@"
    fi
} | git-hushup --fetch upstream
