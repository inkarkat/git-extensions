#!/bin/bash
# Source: https://stackoverflow.com/a/25109122/813602
set -o pipefail

printUsage()
{
    cat <<HELPTEXT
Check remote whether the current branch is on the same commit as the tracked
remote branch / passed remote (or whether a fetch / push is needed).
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-q|--quiet] [<remote>] [-?|-h|--help]'
}
isQuiet=
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
    --quiet|-q)		shift; isQuiet=t;;
esac


if [ $# -gt 0 ]; then
    case "$1" in
	*/*)	remoteBranch="$1";;
	*)	remoteBranch="${1}/$(git-brname --real-branch-only)" || exit $?;;
    esac
    if ! git-existsbr "$remoteBranch"; then
	printf >&2 'ERROR: remote branch %s does not exist!\n' "$remoteBranch"
	exit 99
    fi
else
    remoteBranch="$(git-tracks)" || exit $?
fi

remoteRev="$(git ls-remote "${remoteBranch%%/*}" "${remoteBranch#*/}" | cut -f1)" || exit 2
localRev="$(git rev-parse HEAD)"
if [ "$localRev" = "$remoteRev" ]; then
    [ "$isQuiet" ] || printf '%s\n' "up to date"
else
    [ "$isQuiet" ] || printf '%s\n' "not up to date"
    exit 1
fi
