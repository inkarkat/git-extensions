#!/bin/bash
set -o noglob

printUsage()
{
    cat <<HELPTEXT
Get and fast-forward upstream changes. (With proper use of other branches for
patches, there should not be a need to merge upstream.) Use for direct checkouts
of upstream, without my own origin. Else, prefer ucatchup.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
    --no-color|--color=*)
			shift;;
    --color)		shift; shift;;
esac


# Need to specify a branch, because the current branch presumably tracks origin,
# not upstream. Because of this, Git wouldn't normally allow pulling to
# upstream:
# > You asked to pull from the remote 'upstream', but did not specify
# > a branch. Because this is not the default configured remote
# > for your current branch, you must specify a branch on the command line.
parsedArguments="$(git-parse-last-remotebr-argument --separate-remote-and-branch upstream "$@")" || exit $?
eval "set -- $parsedArguments"
exec git-wrapper pull --prune "$@"
