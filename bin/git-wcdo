#!/bin/bash

readonly scriptDir="$([ "${BASH_SOURCE[0]}" ] && dirname -- "${BASH_SOURCE[0]}" || exit 3)"
[ -d "$scriptDir" ] || { echo >&2 'ERROR: Cannot determine script directory!'; exit 3; }
readonly projectDir="${scriptDir}/.."
readonly libDir="${projectDir}/lib"

case ",${DEBUG:-}," in
    *,git-wcdo:verbose,*) dump-args -- "$@";;
esac

GIT_DOEXTENSIONS_WRAPPEE=git-wcdo-core
GIT_DOEXTENSIONS_DASHDASH_ARGS_BEFORE_SIMPLECOMMAND=t
: ${GIT_DOEXTENSIONS_WHAT:=working copies}
source "${libDir}/git-do-extensions.sh" || exit 3

parseCommand "$@"

case ",${DEBUG:-}," in
    *,git-wcdo,*)
	    dump-args "$GIT_DOEXTENSIONS_WRAPPEE" "${wcdoCommandArgs[@]}" "${wcdoArgs[@]}" "${dashdashArgs[@]}" "${args[@]}"
	    ;;
    *,git-wcdo:verbose,*)
	    dump-args -a wcdoCommandArgs -- "${wcdoCommandArgs[@]}"
	    dump-args -a wcdoArgs -- "${wcdoArgs[@]}"
	    dump-args -a dashdashArgs -- "${dashdashArgs[@]}"
	    dump-args -a unknownOptions -- "${unknownOptions[@]}"
	    dump-args -a args -- "${args[@]}"
	;;
esac
if [ ${#unknownOptions[@]} -gt 0 ]; then
    printf >&2 'ERROR: Unknown option: "%s"!\n' "${unknownOptions[0]}"
    exit 2
fi

executeCommand
