#!/bin/bash

printUsage()
{
    local additions=
    [ -n "$wrapper" ] || additions+="${additions:+ }WRAPPER-NAME"
    [ -n "$what" ] || additions+="${additions:+ }WRAPPER-DESCRIPTION"

    local literalAdditionalHelp; if [ -n "$GIT_WCSINDIRDOCOMMAND_ADDITIONAL_HELP" ]; then
	literalAdditionalHelp="$GIT_WCSINDIRDOCOMMAND_ADDITIONAL_HELP"
	literalAdditionalHelp="${literalAdditionalHelp//\\/\\\\}"
	literalAdditionalHelp="${literalAdditionalHelp//&/\\&}"
	literalAdditionalHelp="${literalAdditionalHelp//$'\n'/\\n}"
    fi

    git-wcs-in-dir-do --help 2>&1 | sed \
	-e "1s#^.*\$#Execute \"git SIMPLECOMMAND\" and/or COMMANDLINE inside ${what:=CONFIGURED SUBJECTS} that are under Git source control. Considers a ${wrapper:-WRAPPER}-SIMPLECOMMAND wrapper.\\nLists all working copy's dirspecs if no command(s) are passed.${literalAdditionalHelp:+\\n}${literalAdditionalHelp//#/\\#}#" \
	-e '2b removeFirstParagraphLoop' \
	-e '/^Usage:$/N' -e '/\(^\|\n\)Usage: */{ s/\(^\|\n\)\(Usage: *\)\?\([^ ]\+ \)*'"${GIT_DOEXTENSIONS_WRAPPER:-${GIT_DOEXTENSIONS_WRAPPEE:-git-wcs-in-dir-do}} /\\1\\2${wrapper:-$(basename "$1")}${additions:+ }$additions / }" \
	-e b -e :removeFirstParagraphLoop -e '{ /\(^\|\n\)$/{ s/^\(.*\n\)\?//; b; }; N; b removeFirstParagraphLoop }'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

wrapper="${1:?}"; shift
export GIT_DOEXTENSIONS_WRAPPER="$wrapper"
what="${1:?}"; shift
export GIT_DOEXTENSIONS_WHAT="$what"

case "${!#}" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac
exec ${GIT_WCSINDIRDOCOMMAND_COMMAND:-git-wcs-in-dir-do} "$@"
