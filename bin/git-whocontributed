#!/bin/bash
set -o pipefail
shopt -qs extglob

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-v|--verbose] [--csv|--spark|-n|--names-only [-1|--most-only]|-1|--most-only] [-c|--committer] [-e|--email] [--each-file|--each-dir [-r|--recursive] [--full]] [-N|--alphabetic] [--follow] [<log-args> ...] [--] [<path> ...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
Show author names sorted by the total size of the diffs (over the whole history
/ <revision range>) they're responsible for. A change counts twice as much as a
plain addition or deletion.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
    --verbose|-v	Show details counts of commits, insertions, and
			deletions.
    --names-only|-n	Only show the authors that contributed.
    --alphabetic|-N	Output sorted by author instead of contributions.
    --most-only|-1	Only show the single author with the most contributions.
    --csv		Show the size of contributions and author name,
			comma-separated.
    --spark		Show a sparkline bar (the higher, the more
			contributions) followed by the author's initials, all in
			one line.
    --each-file		Show separate single authors with the most contributions
			for each file [in <path>(s)].
    --each-dir		Show separate single authors with the most contributions
			for each directory [in <path>(s)].
    --recursive|-r	Also separately cover files / directories in
			subdirectories instead of just including them in the
			tally for the directory itself.
    --full		Show the full author names and total sizes, not just the
			sparkline bar, also with --each-file or --each-dir.

For coarser granularity, use git-whoowns which counts changed lines.

RELATED COMMANDS:
- git-rank-contributors from git-extras
HELPTEXT
}

typeset -a colorArg=(--color=always)
typeset -a pager=("${PAGER:-less}" --RAW-CONTROL-CHARS)
typeset -a formatter=(column -s $'\t' -t)
if [ ! -t 1 ]; then
    colorArg=()
    pager=()
    formatter=()
fi
isVerbose=
isAlphabetic=
logFormat='%aN'
selector=
typeset -a postFilter=()
eachOutputFormatArg='--spark'
eachType=
eachRecursion=
while [ $# -ne 0 ]
do
    case "$1" in
	--color=auto)	shift; continue;;
	--no-color|--color=*)
			colorArg=("$1"); shift; continue;;
	--color)	[ "$2" = auto ] || colorArg=("$1" "$2"); shift; shift; continue;;

	--each-file)	shift; eachType=File; continue;;
	--each-dir)	shift; eachType=Dir; continue;;
	--recursive|-r)	shift; eachRecursion=t; continue;;
	--)		break;;
	--csv)		: ${HEADER_NEWLINE=$'\n'}; export HEADER_NEWLINE;&
	--spark|--most-only|-1)
			eachOutputFormatArg="$1";;
	--full)		shift; : ${HEADER_NEWLINE=$'\n'}; export HEADER_NEWLINE; eachOutputFormatArg=''; continue;;
    esac

    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--verbose|-v)	shift; isVerbose=t;;
	--committer|-c)	shift; logFormat="${logFormat//%a/%c}";;
	--email|-e)	shift; logFormat+=' <%aE>';;

	--alphabetic|-N)
			shift; isAlphabetic=t;;
	--names-only|-n)
			shift; postFilter=(sed -e 's/^[[:space:]]*[[:digit:]]\+%\?[[:space:]]\+//');;
	--spark)
	    printf -v postSelector '%q ' fieldMap --field-separator , 2 'gensub(/^[[:digit:]]+$/, "??", 1, $fieldNr)' 2 '|nameToInitials -u' 3 '" "' 4 '" "'
	    printf -v postSelector '%s | spark' "$postSelector"
	    ;&	# Continue with CSV.
	--csv)
			shift; printf -v selector '%q ' sed -n -e '/^[[:space:]]*<none>$/d' -e 's/^[[:space:]]*\([[:digit:]]\+\)[[:space:]]\+\([^[:space:]].*\)$/\1,\2/p';;
	--most-only|-1)	shift; selector='countFieldToPercentage 1 | head -n 1'; isAlphabetic=;;

	# Ignore options that influence commit formatting (we need just the
	# author), and diff options.
	-+([cmtpuz]))	shift;;
	--@(abbrev|abbrev-commit|no-abbrev-commit|oneline|no-notes|show-signature|relative-date|parents|children|left-right|graph|cc|patch|no-patch|raw|patch-with-raw|numstat|shortstat|summary|patch-with-stat|name-only|name-status|no-color))	shift;;
	-[U])	shift; shift;;
	--@(abbrev|pretty|format|notes|date|unified|stat|dirstat|submodule|color|word-diff|word-diff-regex|color-words)=*)	shift;;
	--@(pretty|format|notes|date|unified|stat|dirstat|submodule|color|word-diff|word-diff-regex|color-words))	shift; shift;;
	*)		break;;
    esac
done

triggerEachRecursion()
{
    local -r scriptName="$(basename -- "${BASH_SOURCE[0]}")"
    headerArg='--with-header'; [ "$eachRecursion" ] || headerArg=--with-basename-header
    HEADER_COLON='' git-each$eachType ${eachRecursion:+--recursive} $headerArg "${colorArg[@]}" -- "${scriptName#git-}" $eachOutputFormatArg "$@"
}
if [ -n "$eachType" ]; then
    eval 'triggerEachRecursion "$@"' "${formatter:+|}" '"${formatter[@]}"' "${pager:+|}" '"${pager[@]}"'
    exit $?
fi

logContributions()
{
    git ${GIT_WHOCONTRIBUTED_LOG_COMMAND:-log} --shortstat --pretty="format:${logFormat}" "$@" \
	| awk \
	    -v isAlphabetic="$isAlphabetic" \
	    -v isVerbose="$isVerbose" \
    '
    $3 == "changed," {
	commits[author] += 1
	if ($5 !~ "^insertion") {
	    deleted[author] += $4
	    score[author] += $4
	} else {
	    inserted[author] += $4; deleted[author] += $6
	    score[author] += $4 + $6
	}
    }
    { author=$0 }
    function plural(v, a) {
	return (v == 1 ? a " " : "s" (a ? a : ""))
    }
    END {
	if (isAlphabetic) {
	    PROCINFO["sorted_in"] = "@ind_str_asc"
	} else {
	    PROCINFO["sorted_in"] = "@val_num_desc"
	}
	for (a in score) {
	    if (isVerbose) {
		printf "%7d %-22s: %4d commit%s %5d insertion%s %5d deletion%s\n", score[a], a, commits[a], plural(commits[a], ","), inserted[a], plural(inserted[a], ","), deleted[a], plural(deleted[a])
	    } else {
		printf "%7d %s\n", score[a], a
	    }
	}
    }
    '
}

eval 'logContributions "$@"' \
    "${selector:+|}$selector" \
    "${postSelector:+|}$postSelector" \
    "${postFilter:+|}" '"${postFilter[@]}"' \
    "${pager:+|}" '"${pager[@]}"'
