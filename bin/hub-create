#!/bin/bash
shopt -qs extglob

printUsage()
{
    command hub create --help 2>&1 | sed \
	-e 's/\[-poc]/& [--push]/g'
}

isPush=
typeset -a createArgs=()
typeset -a createDescriptionArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printUsage "$0"; exit 0;;
	--push)		shift; isPush=t;;

	--description|-d)
			createDescriptionArgs+=("$1" "${2?}"); shift; shift;;
	-+([poc]))	createArgs+=("$1"); shift;;
	--@(private|browse|copy))
			createArgs+=("$1"); shift;;
	-[h])		createArgs+=("$1" "${2?}"); shift; shift;;
	--@(homepage|remote-name))
			createArgs+=("$1" "${2?}"); shift; shift;;
	--)		createArgs+=("$1"); shift; break;;
	-*)		{ echo "ERROR: Unknown option \"$1\"!"; echo; printUsage "$0"; } >&2; exit 2;;
	*)		break;;
    esac
done

if [ $# -eq 0 ]; then
    # Default name; use working copy name, not working directory like hub does.
    if wcName="$(git-wcname)"; then
	set -- "${HUB_CREATE_ORGANIZATION}${HUB_CREATE_ORGANIZATION:+/}${HUB_CREATE_REPONAME_PREFIX}${wcName}${HUB_CREATE_REPONAME_SUFFIX}"
    fi
fi

# Generate / extract description via the supplied command if not provided.
[ ${#createDescriptionArgs[@]} -eq 0 ] \
    && [ -n "$HUB_CREATE_DESCRIPTION_GENERATOR" ] \
    && generatedDescription="$(eval "$HUB_CREATE_DESCRIPTION_GENERATOR")" \
    && [ -n "$generatedDescription" ] \
    && createDescriptionArgs=(--description "$generatedDescription")

hub create "${createArgs[@]}" "${createDescriptionArgs[@]}" "$@" || exit $?

eval "$HUB_CREATE_POST_COMMAND" || exit $?

if [ "$isPush" ] \
    || userBinaryChoice --keep-prompt --console --question 'Push repository to GitHub now?' --yes-no
then
    git opublish \
	&& git opa \
	|| exit $?
fi
