#!/bin/bash

isEdit=
hasMessage=
typeset -a args=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; exec hub pull-request --help;;
	--edit|-e)	args+=("$1"); shift; isEdit=t;;
	--message|-m)	args+=("$1" "${2?}"); shift; shift; hasMessage=t;;
	--file|-F)	shift
			# XXX: Multiple --message are supported, but --file is
			# ignored once a --message is passed.
			if [ "$1" = - ]; then
			    args+=(--message "$(</dev/stdin)")
			else
			    args+=(--message "$(<"${1?}")")
			fi
			shift
			;;
	--)		args+=("$1"); shift; break;;
	*)		args+=("$1"); shift;;
    esac
done
typeset -a appendedPullRequestTemplateArgs=()

root="$(git root)" || exit $?
if [ "$hasMessage" ] && [ "$isEdit" ]; then
    # Source: https://docs.github.com/en/communities/using-templates-to-encourage-useful-issues-and-pull-requests/creating-a-pull-request-template-for-your-repository
    for templateFilespec in \
	"${root}/pull_request_template.md" \
	"${root}/docs/pull_request_template.md" \
	"${root}/.github/pull_request_template.md"
	# TODO: Allow template selection from PULL_REQUEST_TEMPLATE/ subdir.
    do
	if [ -r "$templateFilespec" ]; then
	    appendedPullRequestTemplateArgs=(--message "$(<"$templateFilespec")")
	    break
	fi
    done
fi

readarray -t defaultArgs < <(eval "git $GIT_CONFIG_ARGS config --get-all pull-request.defaultArg")
exec hub pull-request "${args[@]}" "${appendedPullRequestTemplateArgs[@]}" "${defaultArgs[@]}" "$@"
