#!/bin/bash
set -o pipefail
readonly REVIEWERS_FORMAT_SUFFIX='|%rs'

printUsage()
{
    cat <<HELPTEXT
Show pull requests with open reviews.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[<pr-args> ...] [-?|-h|--help]'
}

sedLiteral()
{
    printf %s "${1:?}" | sed -e 's/[][\$*.^/]/\\&/g'
}
setSuffixFilter()
{
    filter=(sed -e "s/|\\(.*, \\)\\?$(sedLiteral "${1:?}")\\(, .*\\)\\?$/${2}/" -e t -e d)
}

typeset -a filter=()
formatAddition=
typeset -a launcher=()
typeset -a args=()
typeset -a colorArg=()
format="%pC%>(8)%i%Creset  %t%  l   %Ccyan%rs%Creset${REVIEWERS_FORMAT_SUFFIX}"
typeset -a formatArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)		shift; printUsage "$0"; exit 0;;
	--reviewer)		shift; setSuffixFilter "$1" '&'; shift;;
	--reviewer=*)		setSuffixFilter "${1#--reviewer=}" '&'; shift;;
	--creator)		shift; formatAddition="|%au"; setSuffixFilter "$1"; shift;;
	--creator=*)		formatAddition="|%au"; setSuffixFilter "${1#--creator=}"; shift;;
	--assignee)		shift; formatAddition="|%as"; setSuffixFilter "$1"; shift;;
	--assignee=*)		formatAddition="|%as"; setSuffixFilter "${1#--assignee=}"; shift;;
	--no-color|--color=*)	colorArg=("$1"); shift;;
	--color)		colorArg=("$1" "$2"); shift; shift;;
	--format|-f)		formatArgs+=("$1" "${2%'%n'}${REVIEWERS_FORMAT_SUFFIX}%n"); shift; shift;;
	--browse)		shift; format="%U${REVIEWERS_FORMAT_SUFFIX}"; launcher=(linesToArgs git-browse);;
	--)			args+=("$1"); shift; break;;
	*)			args+=("$1"); shift;;
    esac
done

[ ${#formatArgs[@]} -eq 0 ] && formatArgs=(--format "${format}%n")
[ -n "$formatAddition" ] && formatArgs[1]="${formatArgs[1]%'%n'}${formatAddition}%n"
isNeedColorArgumentWhenPiping "${colorArg[@]}" && colorArg=(--color=always) || colorArg=()

filterPullRequestsWithReviews()
{
    sed -e 's/|.\+$//' -e t -e d
}

eval 'command hub pr list "${colorArg[@]}" "${formatArgs[@]}" "${args[@]}" "$@"' \
    "${filter:+|}" '"${filter[@]}"' \
    | eval filterPullRequestsWithReviews \
    "${launcher:+|}" '"${launcher[@]}"'
