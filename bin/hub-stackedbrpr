#!/bin/bash

: ${GIT_STACKBR_SEPARATOR=-}

printShortUsage()
{
    # Note: short followed by long option; if the user knows the short one, she can
    # skim the long one.
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-b|--branch BRANCH] [--exclude-base] [HUB-PR-ARGS ...] [-?|-h|--help]'
}
printUsage()
{
    # This is the short help when launched with no or incorrect arguments.
    # It is printed to stderr to avoid accidental processing.
    printShortUsage "$1" >&2
    printf >&2 '\nTry %q --help for more information.\n' "$(basename "$1")"
}
printLongUsage()
{
    # This is the long "man page" when launched with the help argument.
    # It is printed to stdout to allow paging with 'more'.
    cat <<HELPDESCRIPTION
List GitHub pull requests for all stacked branches that can be obtained from the
current / passed branch by appending ${GIT_STACKBR_SEPARATOR}1 (${GIT_STACKBR_SEPARATOR}2, etc.) at the end of the branch
name.
HELPDESCRIPTION
    echo
    printShortUsage "$1"
    echo
    cat <<HELPTEXT
    --branch|-b BRANCH	Use BRANCH instead of the current branch.
    --exclude-base	Do not include pull requests for the base branch (the
			branch without the ${GIT_STACKBR_SEPARATOR}1 suffix).
HELPTEXT
}

typeset -a prArgs=()
typeset -a stackedbranchesArgs=()
while [ $# -ne 0 ]
do
    case "$1" in
	--help|-h|-\?)	shift; printLongUsage "$0"; exit 0;;
	--branch|-b)	stackedbranchesArgs+=("$1" "${2:?}"); shift; shift;;
	--exclude-base) stackedbranchesArgs+=("$1"); shift;;
	--)		prArgs+=("$1"); shift; break;;
	*)		prArgs+=("$1"); shift;;
    esac
done

readarray -t branches < <(eval 'git-stackedbranches "${stackedbranchesArgs[@]}"'; printf '\n%d\n' "$?")	# Exit status from the process substitution is lost; return the actual exit status via an appended additional line.
[ ${branches[-1]} -ne 0 ] && exit ${branches[-1]}
unset 'branches[-1]'; [ -z "${branches[-1]}" ] && unset 'branches[-1]'
[ ${#branches[@]} -gt 0 ] || { echo >&2 'ASSERT: Expected at least one stacked branch'; exit 3; }

exec hub-pr "${branches[@]/#/--base=}" "${prArgs[@]}" "$@"
