#!/bin/bash

printUsage()
{
    cat <<HELPTEXT
Open pull requests for the superproject and the current submodule / for all
submodules that are on the same branch as the superproject.
HELPTEXT
    echo
    printf 'Usage: %q %s\n' "$(basename "$1")" '[-?|-h|--help]'
}
case "$1" in
    --help|-h|-\?)	shift; printUsage "$0"; exit 0;;
esac

if git issubmodule; then
    superprojectRoot="$(git superproject)" || exit 3
    submoduleRoot="$PWD"
    cd "$superprojectRoot" || exit 3
    header "../$(git-wcname)"

    handleSubmodules()
    {
	cd "$submoduleRoot" || exit 3
	header "$(git-wcname)"
	message="$(withSeparator \
	    --command hub-superpr \
	    --command 'git bomlog --pretty=format:%B' \
	)" || exit $?

	hub pull-request --message "$message" --edit
    }
else
    handleSubmodules()
    {
	message="$(hub-prtitle --as-integration-message --qualified-with-userrepo)" || return $?
	hub-subsamebrdo --no-git-color --interactive --command "logs=\"\$(git bomlog --pretty=format:%B)\"; hub pull-request --message \"\$message\"\$'\\n'\"\$logs\" --edit"
    }
fi

message="$(withSeparator \
    --command 'git-servername --message' \
    --command 'git bomlog --pretty=format:%B' \
)" || exit $?
hub pull-request --draft --message "$message" --edit || exit $?

handleSubmodules || exit $?

withSeparator \
    --command 'git boml' \
    --command hub-bomsubchanges \
	| clipboard --verbose || exit $?
gh pr edit
