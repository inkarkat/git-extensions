[alias]
	;; mbr: Show the master branch name.
	com = master-command -2 checkout MASTER	; Checkout [<path>s from] master branch.
	cosubm = com --submodules
	mco = master-command +1 MASTER checkoutbranch	; Use with -b <newbranch> to start a patch based on the master branch.
	mcosuperbr = master-command +1 MASTER cosuperbr
	mcosub = mco --submodules	; Checkout master branch, also checkout eponymous local master branches in submodules.

	resetm = master-command -3 resetbr --branch MASTER ; Reset the master branch to the passed REVISION.
	resetmselected = selectedpermanentcommit-command --single-only -3 resetm --revision COMMITS	; Reset the master branch to the commit interactively chosen from the commits in the passed <range>.
	resetm1 = resetmselected --max-count 1
	resetm2 = resetmselected --max-count 2
	resetm3 = resetmselected --max-count 3
	resetm4 = resetmselected --max-count 4
	resetm5 = resetmselected --max-count 5
	resetm6 = resetmselected --max-count 6
	resetm7 = resetmselected --max-count 7
	resetmx = resetmselected --max-count 12
	resetmq = resetmselected --max-count 25
	resetmz = resetmselected --max-count 100
	resetmg = selectedgcommit-command --single-only -3 resetm --revision COMMITS	; Reset the master branch to the commit interactively chosen from the commits where log messages match the specified text or /regexp/.
	resetmchanged = selectedchangedcommit-command --single-only -3 resetm --revision COMMITS	; Reset the master branch to the commit interactively chosen from the commits where the actual diff; i.e. those filepairs whose preimage and postimage have different number of occurrences of the text or /regexp/.
	resetmtouched = selectedtouchedcommit-command --single-only -3 resetm --revision COMMITS	; Reset the master branch to the commit interactively chosen from the commits where in the diff the text or /regexp/ matches, without necessarily changing the number of occurrences themselves.

	mdetach = master-command -2 detach MASTER
	mreset = master-command +1 MASTER reset	; Reset my current branch to the HEAD of the master branch.
	mhardreset = mreset --hard ; Reset my current branch to the HEAD of the master branch.
	mwipe = master-command -2 wipe MASTER
	mreflog = master-command -2 reflog MASTER
	md = master-command -2 diff ..MASTER ; Show differences between master branch and HEAD.
	mdfiles = master-command -3 diff --name-only ..MASTER ; Show changed files between master branch and HEAD.
	mdsta = master-command -2 dsta ..MASTER
	mdstat = master-command -2 dstat ..MASTER
	mdstatbyeach = master-command -2  logstatbyeach ..MASTER
	mdstabyeach = master-command -2  logstabyeach ..MASTER
	mdl = master-command -2 dl ..MASTER
	mdt = master-command -2 difftool ..MASTER
	mdb = master-command -2 db ..MASTER
	mdw = master-command -2 dw ..MASTER
	mdc = master-command -2 dc ..MASTER
	mda = master-command -2 da ..MASTER
	mdy = master-command -2 diffy ..MASTER
	md-y = master-command -2 diffY ..MASTER
	mad = master-command -2 annotatediff ..MASTER
	mdr = master-command -2 dr ..MASTER
	mdrl = master-command -2 drl ..MASTER
	ml = master-command -2 l MASTER
	mlo = master-command -2 lo MASTER
	mlogmod = master-command -2 logmod MASTER
	mlogadded = master-command -2 logadded MASTER
	mlogdeleted = master-command -2 logdeleted MASTER
	mlogrenamed = master-command -2 logrenamed MASTER
	mlogmodfiles = master-command -2 logmodfiles MASTER
	mlogaddedfiles = master-command -2 logaddedfiles MASTER
	mlogdeletedfiles = master-command -2 logdeletedfiles MASTER
	mlogrenamedfiles = master-command -2 logrenamedfiles MASTER
	mrevive = master-command -3 revive --all MASTER
	mlc = master-command -2 lc MASTER
	mlg = master-command -2 lg MASTER
	; No mlgx.
	mlgf = master-command -2 lgf MASTER
	mlgv = master-command -2 lgv MASTER
	mlgrel = master-command -2 lgrel MASTER
	mlgtagged = master-command -2 lgtagged MASTER
	mlgst = master-command -2 lgst MASTER
	mlgi = master-command -2 lgi MASTER
	mlg-i = master-command -2 lg-i MASTER
	mlh = master-command -2 lh MASTER
	mlhmine = master-command -2 lhmine MASTER
	mlhteam = master-command -2 lhteam MASTER
	mlhby = master-command -2 lhby MASTER
	mlurl = master-command -2 lurl MASTER
	mlourl = master-command -2 lourl MASTER
	mluurl = master-command -2 luurl MASTER
	mlourlv = master-command -2 lourlv MASTER
	mluurlv = master-command -2 luurlv MASTER
	mtreeurl = master-command -2 treeurl MASTER
	mtreeourl = master-command -2 treeourl MASTER
	mtreeuurl = master-command -2 treeuurl MASTER
	mtreeourlv = master-command -2 treeourlv MASTER
	mtreeuurlv = master-command -2 treeuurlv MASTER
	mlghi = master-command -2 lghi MASTER
	mlghist = master-command -2 lghist MASTER
	mlghii = master-command -2 lghii MASTER
	mlghi-i = master-command -2 lghi-i MASTER
	mlgmine = master-command -2 lgmine MASTER
	mlog = master-command -2 log MASTER
	mlogf = master-command -2 logf MASTER
	mlogv = master-command -2 logv MASTER
	mlogfiles = master-command -2 logfiles MASTER
	minout = master-command -3 inout --base MASTER
	miofiles = master-command -4 inout --files --base MASTER
	miosubmodules = master-command -4 inout --submodules --base MASTER
	mio = master-command -3 io --base MASTER
	mab = master-command -3 ab --base MASTER
	mcat = master-command -2 cat MASTER
	mcp = master-command -2 cp MASTER
	mrb = master-command +1 MASTER rebase ; Rebase my commits on top of the latest master.
	mmerge = master-command +1 MASTER merge	; Merge master branch into the current branch.
	mmergedr = master-command +1 MASTER mergedryrun ; Test merge of master branch into the current branch.
	mff = master-command ff	; Fast-forward the master branch to the current branch.
	mnoff = master-command noff	; Merge (even when fast-forwarding is possible) the master branch to the current branch.
	mergetom = master-command mergeto	; Merge the current branch into master.
	fftom = master-command ffto	; Fast-forward the current branch into master.
	nofftom = master-command noffto	; Merge (even when fast-forwarding is possible) the current branch into master.

	;; nset: Make <branch> / the current branch the base branch (for git *n commands).
	;; nbr: Show the base branch name.
	;; nclear: Clear the defined base branch.
	con = base-command -2 checkout BASE	; Checkout [<path>s from] the base branch.
	cosubn = con --submodules
	nco = base-command +1 BASE checkoutbranch	; Use with -b <newbranch> to start a patch based on the base branch.
	ncosuperbr = base-command +1 BASE cosuperbr
	ncosub = nco --submodules	; Checkout base branch, also checkout eponymous local base branches in submodules.

	resetn = base-command -3 resetbr --branch BASE	; Reset the base branch to the passed REVISION.
	resetnselected = selectedpermanentcommit-command --single-only -3 resetn --revision COMMITS	; Reset the base branch to the commit interactively chosen from the commits in the passed <range>.
	resetn1 = resetnselected --max-count 1
	resetn2 = resetnselected --max-count 2
	resetn3 = resetnselected --max-count 3
	resetn4 = resetnselected --max-count 4
	resetn5 = resetnselected --max-count 5
	resetn6 = resetnselected --max-count 6
	resetn7 = resetnselected --max-count 7
	resetnx = resetnselected --max-count 12
	resetnq = resetnselected --max-count 25
	resetnz = resetnselected --max-count 100
	resetng = selectedgcommit-command --single-only -3 resetn --revision COMMITS	; Reset the base branch to the commit interactively chosen from the commits where log messages match the specified text or /regexp/.
	resetnchanged = selectedchangedcommit-command --single-only -3 resetn --revision COMMITS	; Reset the base branch to the commit interactively chosen from the commits where the actual diff; i.e. those filepairs whose preimage and postimage have different number of occurrences of the text or /regexp/.
	resetntouched = selectedtouchedcommit-command --single-only -3 resetn --revision COMMITS	; Reset the base branch to the commit interactively chosen from the commits where in the diff the text or /regexp/ matches, without necessarily changing the number of occurrences themselves.

	ndetach = base-command -2 detach BASE
	nreset = base-command +1 BASE reset	; Reset my current branch to the HEAD of the base branch.
	nhardreset = nreset --hard ; Reset my current branch to the HEAD of the base branch.
	nwipe = base-command -2 wipe BASE
	nreflog = base-command -2 reflog BASE
	nd = base-command -2 diff ..BASE ; Show differences between base branch and HEAD.
	ndfiles = base-command -3 diff --name-only ..BASE ; Show changed files between base branch and HEAD.
	ndsta = base-command -2 dsta ..BASE
	ndstat = base-command -2 dstat ..BASE
	ndstatbyeach = base-command -2 logstatbyeach ..BASE
	ndstabyeach = base-command -2 logstabyeach ..BASE
	ndl = base-command -2 dl ..BASE
	ndt = base-command -2 difftool ..BASE
	ndb = base-command -2 db ..BASE
	ndw = base-command -2 dw ..BASE
	ndc = base-command -2 dc ..BASE
	nda = base-command -2 da ..BASE
	ndy = base-command -2 diffy ..BASE
	nd-y = base-command -2 diffY ..BASE
	nad = base-command -2 annotatediff ..BASE
	ndr = base-command -2 dr ..BASE
	ndrl = base-command -2 drl ..BASE
	nl = base-command -2 l BASE
	nlo = base-command -2 lo BASE
	nlogmod = base-command -2 logmod BASE
	nlogadded = base-command -2 logadded BASE
	nlogdeleted = base-command -2 logdeleted BASE
	nlogrenamed = base-command -2 logrenamed BASE
	nlogmodfiles = base-command -2 logmodfiles BASE
	nlogaddedfiles = base-command -2 logaddedfiles BASE
	nlogdeletedfiles = base-command -2 logdeletedfiles BASE
	nlogrenamedfiles = base-command -2 logrenamedfiles BASE
	nrevive = base-command -3 revive --all BASE
	nlc = base-command -2 lc BASE
	nlg = base-command -2 lg BASE
	; No nlgx.
	nlgf = base-command -2 lgf BASE
	nlgv = base-command -2 lgv BASE
	nlgrel = base-command -2 lgrel BASE
	nlgtagged = base-command -2 lgtagged BASE
	nlgst = base-command -2 lgst BASE
	nlgi = base-command -2 lgi BASE
	nlg-i = base-command -2 lg-i BASE
	nlh = base-command -2 lh BASE
	nlhmine = base-command -2 lhmine BASE
	nlhteam = base-command -2 lhteam BASE
	nlhby = base-command -2 lhby BASE
	nlurl = base-command -2 lurl BASE
	nlourl = base-command -2 lourl BASE
	nluurl = base-command -2 luurl BASE
	nlourlv = base-command -2 lourlv BASE
	nluurlv = base-command -2 luurlv BASE
	ntreeurl = base-command -2 treeurl BASE
	ntreeourl = base-command -2 treeourl BASE
	ntreeuurl = base-command -2 treeuurl BASE
	ntreeourlv = base-command -2 treeourlv BASE
	ntreeuurlv = base-command -2 treeuurlv BASE
	nlghi = base-command -2 lghi BASE
	nlghist = base-command -2 lghist BASE
	nlghii = base-command -2 lghii BASE
	nlghi-i = base-command -2 lghi-i BASE
	nlgmine = base-command -2 lgmine BASE
	nlog = base-command -2 log BASE
	nlogf = base-command -2 logf BASE
	nlogv = base-command -2 logv BASE
	nlogfiles = base-command -2 logfiles BASE
	ninout = base-command -3 inout --base BASE
	niofiles = base-command -4 inout --files --base BASE
	niosubmodules = base-command -4 inout --submodules --base BASE
	nio = base-command -3 io --base BASE
	nab = base-command -3 ab --base BASE
	ncat = base-command -2 cat BASE
	ncp = base-command -2 cp BASE
	nrb = base-command +1 BASE rebase ; Rebase my commits on top of the latest base.
	nmerge = base-command merge	; Merge base branch into the current branch.
	nmergedr = base-command +1 BASE mergedryrun ; Test merge of base branch into the current branch.
	nff = base-command ff	; Fast-forward the base branch to the current branch.
	nnoff = base-command noff	; Merge (even when fast-forwarding is possible) the base branch to the current branch.
	mergeton = base-command mergeto	; Merge the current branch into the base branch.
	ffton = base-command ffto	; Fast-forward the current branch into the base branch.
	noffton = base-command noffto	; Merge (even when fast-forwarding is possible) the current branch into the base branch.
